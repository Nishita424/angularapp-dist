{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/post.service.ts","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/users/users.component.ts","./src/app/components/users/users.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/post/post.component.ts","./src/app/components/post/post.component.html","./src/app/app.module.ts","./src/app/components/posts/posts.component.ts","./src/app/components/posts/posts.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/main.ts","./src/app/components/post-form/post-form.component.ts","./src/app/components/post-form/post-form.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Welcome !</h1>\n<p>This is the Angular application using jsonplaceholder api posts, users</p>\n<button class=\"btn btn-secondary mr-1\" routerLink=\"/users\">\n  Users section\n</button>\n<button class=\"btn btn-dark\" routerLink=\"/posts\">Posts section</button>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Post } from '../models/post';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    ContentType: 'application/json',\n  }),\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  postsUrl: string = 'https://jsonplaceholder.typicode.com/posts';\n\n  constructor(private http: HttpClient) {}\n\n  getPosts(): Observable<Post[]> {\n    return this.http.get<Post[]>(this.postsUrl);\n  }\n\n  getPost(id: number): Observable<Post> {\n    const url = `${this.postsUrl}/${id}`;\n    return this.http.get<Post>(url);\n  }\n\n  savePost(post: Post): Observable<Post> {\n    return this.http.post<Post>(this.postsUrl, post, httpOptions);\n  }\n\n  updatePost(post: Post): Observable<Post> {\n    const url = `${this.postsUrl}/${post.id}`;\n    return this.http.put<Post>(url, post, httpOptions);\n  }\n\n  deletePost(post: Post | number): Observable<Post> {\n    const id = typeof post === 'number' ? post : post.id;\n    const url = `${this.postsUrl}/${id}`;\n    return this.http.delete<Post>(url, httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>404 Page Not Found</h3>\n<p>Sorry, there is nothing to see here...</p>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\nexport class UsersComponent implements OnInit {\n  user: User = {\n    fName: '',\n    lName: '',\n    email: '',\n  };\n  users: User[];\n  loaded: boolean = false;\n  enableAdd: boolean = false;\n  isActive: boolean;\n  showExtended: boolean = true;\n  showUserForm: boolean = false;\n\n  // Binding form template with component\n  @ViewChild('userForm') form: any;\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe((users) => (this.users = users));\n    this.loaded = true;\n\n    // this.userService.getData().subscribe((data) => console.log(data));\n  }\n  /*\n  addUser() {\n    this.user.isActive = true;\n    this.user.registered = new Date();\n\n    // Adding new user to first\n    this.users.unshift(this.user);\n\n    // Clearing form\n    this.user = {\n      fName: '',\n      lName: '',\n      email: '',\n    };\n  }\n  */\n  // fireEvent(e) {\n  //   console.log(e.type);\n  //   console.log(e.target.value);\n  // }\n\n  toggleHide(user) {\n    user.hide = !user.hide;\n  }\n\n  // Form submission: onSubmit userForm is an object with two keys: value(new obj), valid(t/f)\n  onSubmit({ value, valid }: { value: User; valid: boolean }) {\n    if (!valid) {\n      console.log('Form is not valid');\n    } else {\n      // console.log(value);\n      value.isActive = true;\n      value.registered = new Date();\n      value.hide = true;\n\n      this.userService.addUser(value);\n\n      this.form.reset();\n    }\n  }\n}\n","<button class=\"btn btn-dark mb-3\" (click)=\"showUserForm = !showUserForm\">\n  Add User\n</button>\n<div class=\"card card-body\" *ngIf=\"showUserForm\">\n  <h2>Add User</h2>\n  <form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\">\n    <div class=\"form-group\">\n      <label>First Name</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        name=\"fName\"\n        [(ngModel)]=\"user.fName\"\n        #userFirstName=\"ngModel\"\n        required\n        minlength=\"2\"\n        [ngClass]=\"{\n          'is-invalid': userFirstName.errors && userFirstName.touched\n        }\"\n      />\n      <!-- For invalid message css, conditions above ngClass is for box css-->\n      <div [hidden]=\"!userFirstName.errors?.required\" class=\"invalid-feedback\">\n        First name required\n      </div>\n\n      <div [hidden]=\"!userFirstName.errors?.minlength\" class=\"invalid-feedback\">\n        Must be atleast 2 characters\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Last Name</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        name=\"lName\"\n        [(ngModel)]=\"user.lName\"\n        #userLastName=\"ngModel\"\n        required\n        minlength=\"2\"\n        [ngClass]=\"{\n          'is-invalid': userLastName.errors && userLastName.touched\n        }\"\n      />\n      <div [hidden]=\"!userLastName.errors?.required\" class=\"invalid-feedback\">\n        Last name required\n      </div>\n\n      <div [hidden]=\"!userLastName.errors?.minlength\" class=\"invalid-feedback\">\n        Must be atleast 2 characters\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Email</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        name=\"email\"\n        [(ngModel)]=\"user.email\"\n        #userEmail=\"ngModel\"\n        required\n        pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n        [ngClass]=\"{\n          'is-invalid': userEmail.errors && userEmail.touched\n        }\"\n      />\n      <div [hidden]=\"!userEmail.errors?.required\" class=\"invalid-feedback\">\n        Email required\n      </div>\n\n      <div [hidden]=\"!userEmail.errors?.pattern\" class=\"invalid-feedback\">\n        Email is not valid\n      </div>\n    </div>\n\n    <button\n      [disabled]=\"!userForm.form.valid\"\n      class=\"btn btn-light btn-block mb-3\"\n    >\n      Add New User\n    </button>\n  </form>\n</div>\n<h2>Users</h2>\n<ul class=\"list-unstyled\" *ngIf=\"loaded && users?.length > 0\">\n  <li\n    class=\"card card-body mb-2\"\n    *ngFor=\"let user of users\"\n    [class.bg-light]=\"user.isActive\"\n  >\n    <h3>\n      {{ user.fName }} {{ user.lName }}\n      <small\n        ><button (click)=\"toggleHide(user)\" class=\"btn btn-dark btn-sm\">\n          <i [ngClass]=\"user.hide ? 'fa fa-plus' : 'fa fa-minus'\"></i></button\n      ></small>\n    </h3>\n\n    <ul class=\"list-group\" *ngIf=\"!user.hide\">\n      <li class=\"list-group-item\">Email: {{ user.email }}</li>\n      <li class=\"list-group-item\">Joined: {{ user.registered | date }}</li>\n    </ul>\n  </li>\n</ul>\n<h2 *ngIf=\"users?.length == 0\">No Users found</h2>\n<h2 *ngIf=\"!loaded\">Loading users..</h2>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularapp';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <!-- <app-posts></app-posts> -->\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PostService } from '../../services/post.service';\n\nimport { Post } from '../../models/post';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css'],\n})\nexport class PostComponent implements OnInit {\n  post: Post;\n\n  constructor(\n    private route: ActivatedRoute,\n    private postService: PostService,\n  ) {}\n\n  ngOnInit(): void {\n    // We actually get the current active route from ActivatedRoute\n    // To get a param: id(here) from the current active route\n    const id = +this.route.snapshot.paramMap.get('id');\n    // console.log(id);\n    this.postService.getPost(id).subscribe((post) => (this.post = post));\n  }\n}\n","<a routerLink=\"/posts\" class=\"btn btn-light btn-sm mb-3\">Back</a>\n\n<div *ngIf=\"post\" class=\"card\">\n  <div class=\"card-body\">\n    <h3>{{ post.title }}</h3>\n    <p>{{ post.body }}</p>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './components/user/user.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from './services/user.service';\nimport { PostsComponent } from './components/posts/posts.component';\nimport { PostService } from './services/post.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostFormComponent } from './components/post-form/post-form.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { PostComponent } from './components/post/post.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    UsersComponent,\n    NavbarComponent,\n    PostsComponent,\n    PostFormComponent,\n    HomeComponent,\n    PostComponent,\n    NotFoundComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [UserService, PostService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Post } from '../../models/post';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css'],\n})\nexport class PostsComponent implements OnInit {\n  posts: Post[];\n  currentPost: Post = {\n    id: 0,\n    title: '',\n    body: '',\n  };\n  isEdit: boolean = false;\n\n  constructor(private postService: PostService) {}\n\n  ngOnInit(): void {\n    this.postService.getPosts().subscribe((posts) => {\n      // console.log(posts);\n      this.posts = posts;\n    });\n  }\n\n  onNewPost(e) {\n    this.posts.unshift(e);\n  }\n\n  editPost(post: Post) {\n    this.currentPost = post;\n    this.isEdit = true;\n  }\n\n  onUpdatedPost(e) {\n    this.posts.forEach((curr, index) => {\n      if (e.id === curr.id) {\n        this.posts.splice(index, 1);\n        this.posts.unshift(e);\n\n        this.isEdit = false;\n\n        this.currentPost = {\n          id: 0,\n          title: '',\n          body: '',\n        };\n      }\n    });\n  }\n\n  deletePost(post: Post) {\n    if (confirm('Are you sure ?')) {\n      this.postService.deletePost(post.id).subscribe(() => {\n        this.posts.forEach((curr, index) => {\n          if (curr.id === post.id) {\n            this.posts.splice(index, 1);\n          }\n        });\n      });\n    }\n  }\n}\n","<app-post-form\n  [currentPost]=\"currentPost\"\n  (newPost)=\"onNewPost($event)\"\n  [isEdit]=\"isEdit\"\n  (updatedPost)=\"onUpdatedPost($event)\"\n></app-post-form>\n<h1>Posts</h1>\n<div class=\"card\" *ngFor=\"let post of posts\">\n  <div class=\"card-body\">\n    <h3>\n      <a routerLink=\"/post/{{ post.id }}\">{{ post.title }}</a>\n    </h3>\n    <p>{{ post.body }}</p>\n    <hr />\n    <button (click)=\"deletePost(post)\" class=\"btn btn-danger\">\n      <i class=\"fa fa-remove\"></i>\n    </button>\n    <button (click)=\"editPost(post)\" class=\"btn btn-light\">\n      <i class=\"fa fa-pencil\"></i>\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-dark bg-primary mb-4 navbar-expand\">\n  <div class=\"container\">\n    <a routerLink=\"/\" class=\"navbar-brand\">Angular App</a>\n    <div>\n      <ul class=\"navbar-nav ml-auto\">\n        <li\n          class=\"nav-item\"\n          [routerLinkActive]=\"['active']\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n        >\n          <a routerLink=\"/\" class=\"nav-link\">Home</a>\n        </li>\n        <li\n          class=\"nav-item\"\n          [routerLinkActive]=\"['active']\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n        >\n          <a routerLink=\"/users\" class=\"nav-link\">Users</a>\n        </li>\n        <li\n          class=\"nav-item\"\n          [routerLinkActive]=\"['active']\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n        >\n          <a routerLink=\"/posts\" class=\"nav-link\">Posts</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { User } from '../models/user';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  users: User[];\n  // data: Observable<any>;\n\n  constructor() {\n    this.users = [\n      {\n        fName: 'John',\n        lName: 'Doe',\n        email: 'john@yahoo.com',\n        isActive: true,\n        registered: new Date('02/01/2020 09:30:00'),\n        hide: true,\n      },\n      {\n        fName: 'Jake',\n        lName: 'Doe',\n        email: 'jake@yahoo.com',\n        isActive: false,\n        registered: new Date('11/01/2020 18:30:00'),\n        hide: true,\n      },\n      {\n        fName: 'Joey',\n        lName: 'Doe',\n        email: 'joey@yahoo.com',\n        isActive: true,\n        registered: new Date('12/01/2020 10:30:00'),\n        hide: true,\n      },\n      {\n        fName: 'Rachel',\n        lName: 'Doe',\n        email: 'rachel@yahoo.com',\n        isActive: false,\n        registered: new Date('01/04/2020 09:30:00'),\n        hide: true,\n      },\n    ];\n  }\n\n  // getData(): Observable<any> {\n  //   this.data = new Observable((observer) => {\n  //     setTimeout(() => {\n  //       observer.next(1);\n  //     }, 1000);\n  //     setTimeout(() => {\n  //       observer.next(2);\n  //     }, 2000);\n  //     setTimeout(() => {\n  //       observer.next({ name: 'Aish' });\n  //     }, 3000);\n  //     setTimeout(() => {\n  //       observer.next({ isMarried: 'no' });\n  //     }, 4000);\n  //   });\n  //   return this.data;\n  // }\n\n  getUsers(): Observable<User[]> {\n    return of(this.users);\n  }\n\n  addUser(user: User) {\n    this.users.unshift(user);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { PostsComponent } from './components/posts/posts.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { PostComponent } from './components/post/post.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'users', component: UsersComponent },\n  { path: 'posts', component: PostsComponent },\n  { path: 'post/:id', component: PostComponent },\n  // When you try to navigate any page whose route is not included above, will direct to the below NotFoundComponent\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css'],\n})\nexport class UserComponent implements OnInit {\n  user: User;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.user = {\n      fName: 'John',\n      lName: 'Doe',\n      email: 'john@gmail.com'\n    }\n  }\n}\n","<h1>{{ user.fName }} {{ user.lName }}</h1>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { Post } from '../../models/post';\nimport { PostService } from '../../services/post.service';\n\n@Component({\n  selector: 'app-post-form',\n  templateUrl: './post-form.component.html',\n  styleUrls: ['./post-form.component.css'],\n})\nexport class PostFormComponent implements OnInit {\n  @Output() updatedPost: EventEmitter<Post> = new EventEmitter();\n  @Output() newPost: EventEmitter<Post> = new EventEmitter();\n  @Input() currentPost: Post;\n  @Input() isEdit: boolean;\n\n  constructor(private postService: PostService) {}\n\n  ngOnInit(): void {}\n\n  addPost(title, body) {\n    if (!title || !body) {\n      alert('Please add post');\n    } else {\n      this.postService\n        .savePost({ title, body } as Post)\n        .subscribe((post) => this.newPost.emit(post));\n    }\n  }\n\n  updatePost() {\n    this.postService.updatePost(this.currentPost).subscribe((editedPost) => {\n      console.log(editedPost);\n      this.isEdit = false;\n      this.updatedPost.emit(editedPost);\n    });\n  }\n}\n","<h2>Add Post</h2>\n<div class=\"card card-body mb-3\">\n  <form>\n    <div class=\"form-group\">\n      <label>Title</label>\n      <input\n        #title\n        type=\"text\"\n        class=\"form-control\"\n        name=\"title\"\n        [(ngModel)]=\"currentPost.title\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label>Body</label>\n      <input\n        #body\n        type=\"text\"\n        class=\"form-control\"\n        name=\"body\"\n        [(ngModel)]=\"currentPost.body\"\n      />\n    </div>\n    <input type=\"hidden\" name=\"id\" [(ngModel)]=\"currentPost.id\" />\n    <button\n      (click)=\"addPost(title.value, body.value)\"\n      class=\"btn btn-dark btn-block\"\n      *ngIf=\"!isEdit\"\n    >\n      Add Post\n    </button>\n    <button\n      (click)=\"updatePost()\"\n      class=\"btn btn-warning btn-block\"\n      *ngIf=\"isEdit\"\n    >\n      Update Post\n    </button>\n  </form>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}